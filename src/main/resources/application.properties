mp.messaging.incoming.order-in.auto.offset.reset=earliest
mp.messaging.incoming.order-in.topic=order-in
mp.messaging.incoming.order-in.group.id=order-consumer
mp.messaging.incoming.order-in.connector=smallrye-kafka



# Increase batch size for efficiency
mp.messaging.incoming.order-in.fetch.min.bytes=1048576
mp.messaging.incoming.order-in.fetch.max.wait.ms=50
mp.messaging.incoming.order-in.max.poll.records=1000

# Process more records per poll (reduce overhead)
mp.messaging.incoming.order-in.poll-timeout=500


mp.messaging.incoming.order-in.bootstrap.servers=localhost:9092
quarkus.log.level=INFO

quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=postgres
quarkus.datasource.password=postgres
#quarkus.datasource.reactive.url=postgresql://localhost:5432/postgres
#quarkus.datasource.jdbc=false
#quarkus.datasource.reactive.max-size=1

quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/postgres
quarkus.datasource.jdbc=true

quarkus.hibernate-orm.database.generation=create

quarkus.devservices.enabled=false

quarkus.http.host=0.0.0.0

# Enable Micrometer metrics
quarkus.micrometer.export.prometheus.enabled=true
quarkus.micrometer.export.prometheus.path=/q/metrics
quarkus.micrometer.export.prometheus.default-registry=true
quarkus.micrometer.binder.kafka.enabled=true


#quarkus.log.category."io.quarkus.micrometer.runtime".level=DEBUG
